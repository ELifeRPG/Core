@page "/errors/unauthorized"
@using Microsoft.AspNetCore.WebUtilities

@inject NavigationManager NavigationManager

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-16">

    <MudCard>
        <MudCardMedia Image="images/banner_error_page_401.png" Height="200"/>
        <MudCardContent>
            <MudText Typo="Typo.h5">OH NO!</MudText>
            <MudText Typo="Typo.body2">You are not authorized to visit this page.</MudText>
            <MudText Typo="Typo.body2">Anyway.. you might just need to sign-in.</MudText>
        </MudCardContent>
        <MudCardActions>
            <MudButtonGroup VerticalAlign="@(true)" OverrideStyles="@(false)" Style="width: 100%">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="@(true)" EndIcon="@Icons.Custom.Brands.Discord" OnClick="@(() => NavigationManager.NavigateTo($"/authentication/sign-in{GetQueryString()}", true))">Sign-In with Discord</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Tertiary" FullWidth="@(true)" EndIcon="@Icons.Filled.Home" OnClick="@(() => NavigationManager.NavigateTo("/", true))">Back to Home</MudButton>
            </MudButtonGroup>
        </MudCardActions>
    </MudCard>

</MudContainer>

@code
{
    string GetQueryString()
    {
        return QueryHelpers.ParseQuery(NavigationManager.ToAbsoluteUri(NavigationManager.Uri).Query).TryGetValue("redirectUri", out var redirectUri)
            ? $"?redirectUri={redirectUri}"
            : string.Empty;
    }
}